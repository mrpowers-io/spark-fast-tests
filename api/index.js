Index.PACKAGES = {"com.github.mrpowers" : [], "com.github.mrpowers.spark.fast.tests" : [{"name" : "com.github.mrpowers.spark.fast.tests.ArrayUtil", "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html", "members_object" : [{"label" : "ArrayDeep", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ArrayUtil.ArrayDeep", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#ArrayDeepextendsAnyVal", "kind" : "implicit final class"}, {"label" : "prettyArray", "tail" : "(a: Array[_]): IndexedSeq[Any]", "member" : "com.github.mrpowers.spark.fast.tests.ArrayUtil.prettyArray", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#prettyArray(a:Array[_]):IndexedSeq[Any]", "kind" : "def"}, {"label" : "showTwoColumnStringColorCustomizable", "tail" : "(arr: Array[(Any, Any)], rowEqual: Array[Boolean], truncate: Int, equalColor: EscapeAttr, unequalColor: EscapeAttr): String", "member" : "com.github.mrpowers.spark.fast.tests.ArrayUtil.showTwoColumnStringColorCustomizable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#showTwoColumnStringColorCustomizable(arr:Array[(Any,Any)],rowEqual:Array[Boolean],truncate:Int,equalColor:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr,unequalColor:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr):String", "kind" : "def"}, {"label" : "showTwoColumnString", "tail" : "(arr: Array[(Any, Any)], truncate: Int): String", "member" : "com.github.mrpowers.spark.fast.tests.ArrayUtil.showTwoColumnString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#showTwoColumnString(arr:Array[(Any,Any)],truncate:Int):String", "kind" : "def"}, {"label" : "weirdTypesToStrings", "tail" : "(arr: Array[(Any, Any)], truncate: Int): Array[List[String]]", "member" : "com.github.mrpowers.spark.fast.tests.ArrayUtil.weirdTypesToStrings", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#weirdTypesToStrings(arr:Array[(Any,Any)],truncate:Int):Array[List[String]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ArrayUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.ColumnComparer", "members_trait" : [{"label" : "assertColEquality", "tail" : "(df: DataFrame, colName1: String, colName2: String): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ColumnComparer.assertColEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#assertColEquality(df:org.apache.spark.sql.DataFrame,colName1:String,colName2:String):Unit", "kind" : "def"}, {"label" : "assertFloatTypeColumnEquality", "tail" : "(df: DataFrame, colName1: String, colName2: String, precision: Float): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ColumnComparer.assertFloatTypeColumnEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#assertFloatTypeColumnEquality(df:org.apache.spark.sql.DataFrame,colName1:String,colName2:String,precision:Float):Unit", "kind" : "def"}, {"label" : "assertDoubleTypeColumnEquality", "tail" : "(df: DataFrame, colName1: String, colName2: String, precision: Double): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ColumnComparer.assertDoubleTypeColumnEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#assertDoubleTypeColumnEquality(df:org.apache.spark.sql.DataFrame,colName1:String,colName2:String,precision:Double):Unit", "kind" : "def"}, {"label" : "assertBinaryTypeColumnEquality", "tail" : "(df: DataFrame, colName1: String, colName2: String): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ColumnComparer.assertBinaryTypeColumnEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#assertBinaryTypeColumnEquality(df:org.apache.spark.sql.DataFrame,colName1:String,colName2:String):Unit", "kind" : "def"}, {"label" : "ace", "tail" : "(df: DataFrame, colName1: String, colName2: String): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ColumnComparer.ace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#ace(df:org.apache.spark.sql.DataFrame,colName1:String,colName2:String):Unit", "kind" : "def"}, {"label" : "assertColumnEquality", "tail" : "(df: DataFrame, colName1: String, colName2: String): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ColumnComparer.assertColumnEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#assertColumnEquality(df:org.apache.spark.sql.DataFrame,colName1:String,colName2:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnComparer.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.ColumnMismatch", "shortDescription" : "", "members_case class" : [{"member" : "com.github.mrpowers.spark.fast.tests.ColumnMismatch#<init>", "error" : "unsupported entity"}, {"label" : "smth", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.ColumnMismatch.smth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#smth:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/ColumnMismatch.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.DataFrameComparer", "members_trait" : [{"label" : "assertLargeDataFrameEquality", "tail" : "(actualDF: DataFrame, expectedDF: DataFrame, ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DataFrameComparer.assertLargeDataFrameEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertLargeDataFrameEquality(actualDF:org.apache.spark.sql.DataFrame,expectedDF:org.apache.spark.sql.DataFrame,ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean):Unit", "kind" : "def"}, {"label" : "assertSmallDataFrameEquality", "tail" : "(actualDF: DataFrame, expectedDF: DataFrame, ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean, truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DataFrameComparer.assertSmallDataFrameEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertSmallDataFrameEquality(actualDF:org.apache.spark.sql.DataFrame,expectedDF:org.apache.spark.sql.DataFrame,ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean,truncate:Int):Unit", "kind" : "def"}, {"label" : "assertApproximateDataFrameEquality", "tail" : "(actualDF: DataFrame, expectedDF: DataFrame, precision: Double, ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertApproximateDataFrameEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertApproximateDataFrameEquality(actualDF:org.apache.spark.sql.DataFrame,expectedDF:org.apache.spark.sql.DataFrame,precision:Double,ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean):Unit", "kind" : "def"}, {"label" : "assertLargeDatasetContentEquality", "tail" : "(ds1: Dataset[T], ds2: Dataset[T], equals: (T, T) ⇒ Boolean)(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertLargeDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertLargeDatasetContentEquality[T](ds1:org.apache.spark.sql.Dataset[T],ds2:org.apache.spark.sql.Dataset[T],equals:(T,T)=>Boolean)(implicitevidence$3:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "assertLargeDatasetContentEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], equals: (T, T) ⇒ Boolean, orderedComparison: Boolean)(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertLargeDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertLargeDatasetContentEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],equals:(T,T)=>Boolean,orderedComparison:Boolean)(implicitevidence$2:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "assertLargeDatasetEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], equals: (T, T) ⇒ Boolean, ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean)(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertLargeDatasetEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertLargeDatasetEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],equals:(T,T)=>Boolean,ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean)(implicitevidence$1:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "sortPreciseColumns", "tail" : "(ds: Dataset[T]): Dataset[T]", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.sortPreciseColumns", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#sortPreciseColumns[T](ds:org.apache.spark.sql.Dataset[T]):org.apache.spark.sql.Dataset[T]", "kind" : "def"}, {"label" : "defaultSortDataset", "tail" : "(ds: Dataset[T]): Dataset[T]", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.defaultSortDataset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#defaultSortDataset[T](ds:org.apache.spark.sql.Dataset[T]):org.apache.spark.sql.Dataset[T]", "kind" : "def"}, {"label" : "assertSmallDatasetContentEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertSmallDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertSmallDatasetContentEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],truncate:Int):Unit", "kind" : "def"}, {"label" : "assertSmallDatasetContentEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], orderedComparison: Boolean, truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertSmallDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertSmallDatasetContentEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],orderedComparison:Boolean,truncate:Int):Unit", "kind" : "def"}, {"label" : "assertSmallDatasetEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean, truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertSmallDatasetEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#assertSmallDatasetEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean,truncate:Int):Unit", "kind" : "def"}, {"label" : "orderColumns", "tail" : "(ds1: Dataset[T], ds2: Dataset[T]): Dataset[T]", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.orderColumns", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#orderColumns[T](ds1:org.apache.spark.sql.Dataset[T],ds2:org.apache.spark.sql.Dataset[T]):org.apache.spark.sql.Dataset[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFrameComparer.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.DataFramePrettyPrint", "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html", "members_object" : [{"label" : "showString", "tail" : "(df: DataFrame, _numRows: Int, truncate: Int): String", "member" : "com.github.mrpowers.spark.fast.tests.DataFramePrettyPrint.showString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#showString(df:org.apache.spark.sql.DataFrame,_numRows:Int,truncate:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DataFramePrettyPrint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.DatasetComparer", "members_trait" : [{"label" : "assertApproximateDataFrameEquality", "tail" : "(actualDF: DataFrame, expectedDF: DataFrame, precision: Double, ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertApproximateDataFrameEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertApproximateDataFrameEquality(actualDF:org.apache.spark.sql.DataFrame,expectedDF:org.apache.spark.sql.DataFrame,precision:Double,ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean):Unit", "kind" : "def"}, {"label" : "assertLargeDatasetContentEquality", "tail" : "(ds1: Dataset[T], ds2: Dataset[T], equals: (T, T) ⇒ Boolean)(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertLargeDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertLargeDatasetContentEquality[T](ds1:org.apache.spark.sql.Dataset[T],ds2:org.apache.spark.sql.Dataset[T],equals:(T,T)=>Boolean)(implicitevidence$3:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "assertLargeDatasetContentEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], equals: (T, T) ⇒ Boolean, orderedComparison: Boolean)(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertLargeDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertLargeDatasetContentEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],equals:(T,T)=>Boolean,orderedComparison:Boolean)(implicitevidence$2:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "assertLargeDatasetEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], equals: (T, T) ⇒ Boolean, ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean)(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertLargeDatasetEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertLargeDatasetEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],equals:(T,T)=>Boolean,ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean)(implicitevidence$1:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "sortPreciseColumns", "tail" : "(ds: Dataset[T]): Dataset[T]", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.sortPreciseColumns", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#sortPreciseColumns[T](ds:org.apache.spark.sql.Dataset[T]):org.apache.spark.sql.Dataset[T]", "kind" : "def"}, {"label" : "defaultSortDataset", "tail" : "(ds: Dataset[T]): Dataset[T]", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.defaultSortDataset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#defaultSortDataset[T](ds:org.apache.spark.sql.Dataset[T]):org.apache.spark.sql.Dataset[T]", "kind" : "def"}, {"label" : "assertSmallDatasetContentEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertSmallDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertSmallDatasetContentEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],truncate:Int):Unit", "kind" : "def"}, {"label" : "assertSmallDatasetContentEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], orderedComparison: Boolean, truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertSmallDatasetContentEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertSmallDatasetContentEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],orderedComparison:Boolean,truncate:Int):Unit", "kind" : "def"}, {"label" : "assertSmallDatasetEquality", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], ignoreNullable: Boolean, ignoreColumnNames: Boolean, orderedComparison: Boolean, ignoreColumnOrder: Boolean, truncate: Int): Unit", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.assertSmallDatasetEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#assertSmallDatasetEquality[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],ignoreNullable:Boolean,ignoreColumnNames:Boolean,orderedComparison:Boolean,ignoreColumnOrder:Boolean,truncate:Int):Unit", "kind" : "def"}, {"label" : "orderColumns", "tail" : "(ds1: Dataset[T], ds2: Dataset[T]): Dataset[T]", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.orderColumns", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#orderColumns[T](ds1:org.apache.spark.sql.Dataset[T],ds2:org.apache.spark.sql.Dataset[T]):org.apache.spark.sql.Dataset[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html", "members_object" : [{"label" : "maxUnequalRowsToShow", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.DatasetComparer.maxUnequalRowsToShow", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#maxUnequalRowsToShow:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetComparer.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.DatasetContentMismatch", "shortDescription" : "", "members_case class" : [{"member" : "com.github.mrpowers.spark.fast.tests.DatasetContentMismatch#<init>", "error" : "unsupported entity"}, {"label" : "smth", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.DatasetContentMismatch.smth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#smth:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetContentMismatch.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.DatasetCountMismatch", "shortDescription" : "", "members_case class" : [{"member" : "com.github.mrpowers.spark.fast.tests.DatasetCountMismatch#<init>", "error" : "unsupported entity"}, {"label" : "smth", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.DatasetCountMismatch.smth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#smth:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/DatasetCountMismatch.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.RDDComparer", "members_trait" : [{"label" : "assertSmallRDDEquality", "tail" : "(actualRDD: RDD[T], expectedRDD: RDD[T])(arg0: ClassTag[T]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.RDDComparer.assertSmallRDDEquality", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#assertSmallRDDEquality[T](actualRDD:org.apache.spark.rdd.RDD[T],expectedRDD:org.apache.spark.rdd.RDD[T])(implicitevidence$2:scala.reflect.ClassTag[T]):Unit", "kind" : "def"}, {"label" : "contentMismatchMessage", "tail" : "(actualRDD: RDD[T], expectedRDD: RDD[T])(arg0: ClassTag[T]): String", "member" : "com.github.mrpowers.spark.fast.tests.RDDComparer.contentMismatchMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#contentMismatchMessage[T](actualRDD:org.apache.spark.rdd.RDD[T],expectedRDD:org.apache.spark.rdd.RDD[T])(implicitevidence$1:scala.reflect.ClassTag[T]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDComparer.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.RDDContentMismatch", "shortDescription" : "", "members_case class" : [{"member" : "com.github.mrpowers.spark.fast.tests.RDDContentMismatch#<init>", "error" : "unsupported entity"}, {"label" : "smth", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.RDDContentMismatch.smth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#smth:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/RDDContentMismatch.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.RddHelpers", "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html", "members_object" : [{"label" : "zipWithIndex", "tail" : "(rdd: RDD[T]): RDD[(Long, T)]", "member" : "com.github.mrpowers.spark.fast.tests.RddHelpers.zipWithIndex", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#zipWithIndex[T](rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.rdd.RDD[(Long,T)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RddHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.RowComparer", "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html", "members_object" : [{"label" : "areRowsEqual", "tail" : "(r1: Row, r2: Row, tol: Double): Boolean", "member" : "com.github.mrpowers.spark.fast.tests.RowComparer.areRowsEqual", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#areRowsEqual(r1:org.apache.spark.sql.Row,r2:org.apache.spark.sql.Row,tol:Double):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/RowComparer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.SchemaComparer", "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html", "members_object" : [{"label" : "equals", "tail" : "(dt1: DataType, dt2: DataType, ignoreNullable: Boolean, ignoreColumnNames: Boolean, ignoreColumnOrder: Boolean): Boolean", "member" : "com.github.mrpowers.spark.fast.tests.SchemaComparer.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#equals(dt1:org.apache.spark.sql.types.DataType,dt2:org.apache.spark.sql.types.DataType,ignoreNullable:Boolean,ignoreColumnNames:Boolean,ignoreColumnOrder:Boolean):Boolean", "kind" : "def"}, {"label" : "equals", "tail" : "(s1: StructType, s2: StructType, ignoreNullable: Boolean, ignoreColumnNames: Boolean, ignoreColumnOrder: Boolean): Boolean", "member" : "com.github.mrpowers.spark.fast.tests.SchemaComparer.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#equals(s1:org.apache.spark.sql.types.StructType,s2:org.apache.spark.sql.types.StructType,ignoreNullable:Boolean,ignoreColumnNames:Boolean,ignoreColumnOrder:Boolean):Boolean", "kind" : "def"}, {"label" : "assertSchemaEqual", "tail" : "(actualDS: Dataset[T], expectedDS: Dataset[T], ignoreNullable: Boolean, ignoreColumnNames: Boolean, ignoreColumnOrder: Boolean): Unit", "member" : "com.github.mrpowers.spark.fast.tests.SchemaComparer.assertSchemaEqual", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#assertSchemaEqual[T](actualDS:org.apache.spark.sql.Dataset[T],expectedDS:org.apache.spark.sql.Dataset[T],ignoreNullable:Boolean,ignoreColumnNames:Boolean,ignoreColumnOrder:Boolean):Unit", "kind" : "def"}, {"label" : "DatasetSchemaMismatch", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.SchemaComparer.DatasetSchemaMismatch", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#DatasetSchemaMismatchextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/SchemaComparer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.mrpowers.spark.fast.tests.ufansi" : [{"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr", "members_trait" : [{"label" : "++", "tail" : "(other: Attrs): Attrs", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.++", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#++(other:com.github.mrpowers.spark.fast.tests.ufansi.Attrs):com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "kind" : "def"}, {"label" : "attrs", "tail" : "(): Seq[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.attrs", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#attrs:Seq[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "def"}, {"label" : "transform", "tail" : "(state: State): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.transform", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#transform(state:com.github.mrpowers.spark.fast.tests.ufansi.Str.State):Long", "kind" : "def"}, {"label" : "apply", "tail" : "(s: Str): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.apply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#apply(s:com.github.mrpowers.spark.fast.tests.ufansi.Str):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.name", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#name:String", "kind" : "abstract def"}, {"label" : "escapeOpt", "tail" : "(): Option[String]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.escapeOpt", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#escapeOpt:Option[String]", "kind" : "abstract def"}, {"label" : "applyMask", "tail" : "(): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.applyMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#applyMask:Long", "kind" : "abstract def"}, {"label" : "resetMask", "tail" : "(): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.resetMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html#resetMask:Long", "kind" : "abstract def"}], "shortDescription" : "Represents a single, atomic ANSI escape sequence that results in a color, background or decoration being added to the output.", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html", "members_object" : [{"label" : "categories", "tail" : ": Vector[Category]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.categories", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#categories:scala.collection.immutable.Vector[com.github.mrpowers.spark.fast.tests.ufansi.Category]", "kind" : "val"}, {"label" : "Reset", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.Reset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#Reset:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attr.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "members_trait" : [{"label" : "transform", "tail" : "(state: State): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.transform", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#transform(state:com.github.mrpowers.spark.fast.tests.ufansi.Str.State):Long", "kind" : "def"}, {"label" : "apply", "tail" : "(s: Str): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.apply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#apply(s:com.github.mrpowers.spark.fast.tests.ufansi.Str):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "++", "tail" : "(other: Attrs): Attrs", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.++", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#++(other:com.github.mrpowers.spark.fast.tests.ufansi.Attrs):com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "kind" : "abstract def"}, {"label" : "applyMask", "tail" : "(): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.applyMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#applyMask:Long", "kind" : "abstract def"}, {"label" : "resetMask", "tail" : "(): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.resetMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html#resetMask:Long", "kind" : "abstract def"}], "shortDescription" : "Represents one or more ufansi.Attrs, that can be passed around as a set or combined with other sets of ufansi.Attrs.", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html", "members_object" : [{"label" : "toSeq", "tail" : "(attrs: Attrs): Seq[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.toSeq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#toSeq(attrs:com.github.mrpowers.spark.fast.tests.ufansi.Attrs):Seq[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "def"}, {"label" : "Multiple", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.Multiple", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#MultipleextendsAttrs", "kind" : "class"}, {"label" : "apply", "tail" : "(attrs: Attr*): Attrs", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.apply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#apply(attrs:com.github.mrpowers.spark.fast.tests.ufansi.Attr*):com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "kind" : "def"}, {"label" : "emitAnsiCodes0", "tail" : "(currentState: State, nextState: State, output: StringBuilder, categoryArray: Array[Category]): Unit", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.emitAnsiCodes0", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#emitAnsiCodes0(currentState:com.github.mrpowers.spark.fast.tests.ufansi.Str.State,nextState:com.github.mrpowers.spark.fast.tests.ufansi.Str.State,output:StringBuilder,categoryArray:Array[com.github.mrpowers.spark.fast.tests.ufansi.Category]):Unit", "kind" : "def"}, {"label" : "emitAnsiCodes", "tail" : "(currentState: State, nextState: State): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.emitAnsiCodes", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#emitAnsiCodes(currentState:com.github.mrpowers.spark.fast.tests.ufansi.Str.State,nextState:com.github.mrpowers.spark.fast.tests.ufansi.Str.State):String", "kind" : "def"}, {"label" : "Empty", "tail" : ": Attrs", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.Empty", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#Empty:com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Attrs.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Back", "shortDescription" : "Attrs to set or reset the color of your background", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html", "members_object" : [{"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "val"}, {"label" : "White", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.White", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#White:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightCyan", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightCyan", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightCyan:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightMagenta", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightMagenta", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightMagenta:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightBlue", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightBlue", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightBlue:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightYellow", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightYellow", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightYellow:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightGreen", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightGreen", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightGreen:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightRed", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightRed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightRed:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "DarkGray", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.DarkGray", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#DarkGray:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightGray", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.LightGray", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#LightGray:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Cyan", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Cyan", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Cyan:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Magenta", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Magenta", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Magenta:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Blue", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Blue", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Blue:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Yellow", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Yellow", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Yellow:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Green", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Green", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Green:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Red", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Red", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Red:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Black", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Black", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Black:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Reset", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Back.Reset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Reset:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "trueIndex", "tail" : "(r: Int, g: Int, b: Int): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.trueIndex", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#trueIndex(r:Int,g:Int,b:Int):Int", "kind" : "def"}, {"label" : "True", "tail" : "(r: Int, g: Int, b: Int): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.True", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#True(r:Int,g:Int,b:Int):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "True", "tail" : "(index: Int): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.True", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#True(index:Int):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "trueRgbEscape", "tail" : "(r: Int, g: Int, b: Int): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.trueRgbEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#trueRgbEscape(r:Int,g:Int,b:Int):String", "kind" : "def"}, {"label" : "Full", "tail" : ": IndexedSeq[EscapeAttr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.Full", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#Full:scala.collection.immutable.IndexedSeq[com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr]", "kind" : "val"}, {"label" : "colorCode", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.colorCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#colorCode:Int", "kind" : "val"}, {"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Back$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Bold", "shortDescription" : "Attrs to turn text bold\/bright or disable it", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html", "members_object" : [{"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Bold.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "val"}, {"label" : "Off", "tail" : ": ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Bold.Off", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#Off:com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "val"}, {"label" : "On", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Bold.On", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#On:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Faint", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Bold.Faint", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#Faint:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Bold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Category", "shortDescription" : "Represents a set of ufansi.Attrs all occupying the same bit-space in the state Int", "members_class" : [{"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "abstract val"}], "class" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Category.html", "kind" : "class"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Color", "shortDescription" : "Attrs to set or reset the color of your foreground text", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html", "members_object" : [{"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "val"}, {"label" : "White", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.White", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#White:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightCyan", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightCyan", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightCyan:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightMagenta", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightMagenta", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightMagenta:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightBlue", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightBlue", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightBlue:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightYellow", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightYellow", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightYellow:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightGreen", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightGreen", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightGreen:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightRed", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightRed", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightRed:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "DarkGray", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.DarkGray", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#DarkGray:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "LightGray", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.LightGray", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#LightGray:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Cyan", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Cyan", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Cyan:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Magenta", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Magenta", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Magenta:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Blue", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Blue", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Blue:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Yellow", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Yellow", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Yellow:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Green", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Green", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Green:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Red", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Red", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Red:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Black", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Black", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Black:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "Reset", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Color.Reset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Reset:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "trueIndex", "tail" : "(r: Int, g: Int, b: Int): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.trueIndex", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#trueIndex(r:Int,g:Int,b:Int):Int", "kind" : "def"}, {"label" : "True", "tail" : "(r: Int, g: Int, b: Int): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.True", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#True(r:Int,g:Int,b:Int):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "True", "tail" : "(index: Int): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.True", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#True(index:Int):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "trueRgbEscape", "tail" : "(r: Int, g: Int, b: Int): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.trueRgbEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#trueRgbEscape(r:Int,g:Int,b:Int):String", "kind" : "def"}, {"label" : "Full", "tail" : ": IndexedSeq[EscapeAttr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.Full", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#Full:scala.collection.immutable.IndexedSeq[com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr]", "kind" : "val"}, {"label" : "colorCode", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.colorCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#colorCode:Int", "kind" : "val"}, {"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Color$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory", "shortDescription" : "* Color a encoded on 25 bit as follow : 0 : reset value 1 - 16 : 3 bit colors 17 - 272 : 8 bit colors 273 - 16 777 388 : 24 bit colors", "members_class" : [{"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "trueIndex", "tail" : "(r: Int, g: Int, b: Int): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.trueIndex", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#trueIndex(r:Int,g:Int,b:Int):Int", "kind" : "def"}, {"label" : "True", "tail" : "(r: Int, g: Int, b: Int): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.True", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#True(r:Int,g:Int,b:Int):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "True", "tail" : "(index: Int): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.True", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#True(index:Int):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "trueRgbEscape", "tail" : "(r: Int, g: Int, b: Int): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.trueRgbEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#trueRgbEscape(r:Int,g:Int,b:Int):String", "kind" : "def"}, {"label" : "Full", "tail" : ": IndexedSeq[EscapeAttr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.Full", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#Full:scala.collection.immutable.IndexedSeq[com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr]", "kind" : "val"}, {"member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory#<init>", "error" : "unsupported entity"}, {"label" : "colorCode", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ColorCategory.colorCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#colorCode:Int", "kind" : "val"}, {"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "abstract val"}], "class" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ColorCategory.html", "kind" : "class"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.ErrorMode", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handle", "tail" : "(sourceIndex: Int, raw: CharSequence): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ErrorMode.handle", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html#handle(sourceIndex:Int,raw:CharSequence):Int", "kind" : "abstract def"}], "shortDescription" : "Used to control what kind of behavior you get if the a CharSequence you are trying to parse into a ufansi.Str contains an Ansi escape notrecognized by Fansi as a valid color.", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html", "members_object" : [{"label" : "Strip", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ErrorMode.Strip", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#Strip", "kind" : "object"}, {"label" : "Sanitize", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ErrorMode.Sanitize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#Sanitize", "kind" : "object"}, {"label" : "Throw", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ErrorMode.Throw", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#Throw", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ErrorMode.html", "kind" : "trait"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "shortDescription" : "An Attr represented by an fansi escape sequence", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr.name", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#name:String", "kind" : "val"}, {"label" : "escapeOpt", "tail" : ": Some[String]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr.escapeOpt", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#escapeOpt:Some[String]", "kind" : "val"}, {"label" : "applyMask", "tail" : ": Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr.applyMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#applyMask:Long", "kind" : "val"}, {"label" : "resetMask", "tail" : ": Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr.resetMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#resetMask:Long", "kind" : "val"}, {"label" : "escape", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr.escape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#escape:String", "kind" : "val"}, {"label" : "++", "tail" : "(other: Attrs): Attrs", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.++", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#++(other:com.github.mrpowers.spark.fast.tests.ufansi.Attrs):com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "kind" : "def"}, {"label" : "attrs", "tail" : "(): Seq[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.attrs", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#attrs:Seq[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "def"}, {"label" : "transform", "tail" : "(state: State): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.transform", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#transform(state:com.github.mrpowers.spark.fast.tests.ufansi.Str.State):Long", "kind" : "def"}, {"label" : "apply", "tail" : "(s: Str): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.apply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#apply(s:com.github.mrpowers.spark.fast.tests.ufansi.Str):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/EscapeAttr.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "shortDescription" : "An Attr for which no fansi escape sequence exists", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#toString():String", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr.name", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#name:String", "kind" : "val"}, {"label" : "escapeOpt", "tail" : ": None.type", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr.escapeOpt", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#escapeOpt:None.type", "kind" : "val"}, {"label" : "applyMask", "tail" : ": Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr.applyMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#applyMask:Long", "kind" : "val"}, {"label" : "resetMask", "tail" : ": Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr.resetMask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#resetMask:Long", "kind" : "val"}, {"label" : "++", "tail" : "(other: Attrs): Attrs", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.++", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#++(other:com.github.mrpowers.spark.fast.tests.ufansi.Attrs):com.github.mrpowers.spark.fast.tests.ufansi.Attrs", "kind" : "def"}, {"label" : "attrs", "tail" : "(): Seq[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attr.attrs", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#attrs:Seq[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "def"}, {"label" : "transform", "tail" : "(state: State): Long", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.transform", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#transform(state:com.github.mrpowers.spark.fast.tests.ufansi.Str.State):Long", "kind" : "def"}, {"label" : "apply", "tail" : "(s: Str): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Attrs.apply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#apply(s:com.github.mrpowers.spark.fast.tests.ufansi.Str):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/ResetAttr.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Reversed", "shortDescription" : "Attrs to reverse the background\/foreground colors of your text, or un-reverse them", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html", "members_object" : [{"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Reversed.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "val"}, {"label" : "Off", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Reversed.Off", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#Off:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "On", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Reversed.On", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#On:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Reversed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.sourcecode", "shortDescription" : "", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html", "members_object" : [{"label" : "Name", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#Name", "kind" : "object"}, {"label" : "Name", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#NameextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/sourcecode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Str", "shortDescription" : "Encapsulates a string with associated ANSI colors and text decorations.", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html", "members_object" : [{"label" : "join", "tail" : "(args: Str*): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.join", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#join(args:com.github.mrpowers.spark.fast.tests.ufansi.Str*):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "fromArrays", "tail" : "(chars: Array[Char], colors: Array[State]): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.fromArrays", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#fromArrays(chars:Array[Char],colors:Array[com.github.mrpowers.spark.fast.tests.ufansi.Str.State]):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "apply", "tail" : "(raw: CharSequence, errorMode: ErrorMode): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.apply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#apply(raw:CharSequence,errorMode:com.github.mrpowers.spark.fast.tests.ufansi.ErrorMode):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "ansiRegex", "tail" : ": Pattern", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.ansiRegex", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#ansiRegex:java.util.regex.Pattern", "kind" : "val"}, {"label" : "implicitApply", "tail" : "(raw: CharSequence): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.implicitApply", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#implicitApply(raw:CharSequence):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "implicit def"}, {"label" : "State", "tail" : "", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.State", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#State=Long", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "overlayAll", "tail" : "(overlays: Seq[(Attrs, Int, Int)]): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.overlayAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#overlayAll(overlays:Seq[(com.github.mrpowers.spark.fast.tests.ufansi.Attrs,Int,Int)]):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "overlay", "tail" : "(attrs: Attrs, start: Int, end: Int): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.overlay", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#overlay(attrs:com.github.mrpowers.spark.fast.tests.ufansi.Attrs,start:Int,end:Int):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "render", "tail" : "(): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.render", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#render:String", "kind" : "def"}, {"label" : "getChar", "tail" : "(i: Int): Char", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.getChar", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#getChar(i:Int):Char", "kind" : "def"}, {"label" : "getChars", "tail" : "(): Array[Char]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.getChars", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#getChars:Array[Char]", "kind" : "def"}, {"label" : "getColor", "tail" : "(i: Int): State", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.getColor", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#getColor(i:Int):com.github.mrpowers.spark.fast.tests.ufansi.Str.State", "kind" : "def"}, {"label" : "getColors", "tail" : "(): Array[State]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.getColors", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#getColors:Array[com.github.mrpowers.spark.fast.tests.ufansi.Str.State]", "kind" : "def"}, {"label" : "plainText", "tail" : "(): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.plainText", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#plainText:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#toString():String", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.length", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#length:Int", "kind" : "def"}, {"label" : "substring", "tail" : "(start: Int, end: Int): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.substring", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#substring(start:Int,end:Int):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "splitAt", "tail" : "(index: Int): (Str, Str)", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.splitAt", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#splitAt(index:Int):(com.github.mrpowers.spark.fast.tests.ufansi.Str,com.github.mrpowers.spark.fast.tests.ufansi.Str)", "kind" : "def"}, {"label" : "split", "tail" : "(c: Char): Array[Str]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.split", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#split(c:Char):Array[com.github.mrpowers.spark.fast.tests.ufansi.Str]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Str): Str", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.++", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#++(other:com.github.mrpowers.spark.fast.tests.ufansi.Str):com.github.mrpowers.spark.fast.tests.ufansi.Str", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Str.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Str.html", "kind" : "case class"}, {"name" : "com.github.mrpowers.spark.fast.tests.ufansi.Underlined", "shortDescription" : "Attrs to enable or disable underlined text", "object" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html", "members_object" : [{"label" : "all", "tail" : ": Vector[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Underlined.all", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#all:Vector[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "val"}, {"label" : "Off", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Underlined.Off", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#Off:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "On", "tail" : ": EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Underlined.On", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#On:com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "val"}, {"label" : "makeNoneAttr", "tail" : "(applyValue: Long)(name: Name): ResetAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeNoneAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#makeNoneAttr(applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.ResetAttr", "kind" : "def"}, {"label" : "makeAttr", "tail" : "(s: String, applyValue: Long)(name: Name): EscapeAttr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.makeAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#makeAttr(s:String,applyValue:Long)(implicitname:com.github.mrpowers.spark.fast.tests.ufansi.sourcecode.Name):com.github.mrpowers.spark.fast.tests.ufansi.EscapeAttr", "kind" : "def"}, {"label" : "lookupAttrTable", "tail" : ": Array[Attr]", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttrTable", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#lookupAttrTable:Array[com.github.mrpowers.spark.fast.tests.ufansi.Attr]", "kind" : "lazy val"}, {"label" : "lookupTableWidth", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupTableWidth", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#lookupTableWidth:Int", "kind" : "def"}, {"label" : "lookupAttr", "tail" : "(applyState: Long): Attr", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupAttr", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#lookupAttr(applyState:Long):com.github.mrpowers.spark.fast.tests.ufansi.Attr", "kind" : "def"}, {"label" : "lookupEscape", "tail" : "(applyState: Long): String", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.lookupEscape", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#lookupEscape(applyState:Long):String", "kind" : "def"}, {"label" : "mask", "tail" : "(): Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.mask", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#mask:Int", "kind" : "def"}, {"label" : "width", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.width", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#width:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "com.github.mrpowers.spark.fast.tests.ufansi.Category.offset", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#offset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/mrpowers\/spark\/fast\/tests\/ufansi\/Underlined$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.mrpowers.spark" : [], "com.github.mrpowers.spark.fast" : [], "com" : [], "com.github" : []};